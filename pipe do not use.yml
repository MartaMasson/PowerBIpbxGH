trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

steps:
- checkout: self
  persistCredentials: true  # Permitir scripts acessar o token OAuth
  fetchDepth: 0  # Buscar todo o histórico

#- task: UsePythonVersion@0
#  inputs:
#    versionSpec: '3.x'
#    addToPath: true

- powershell: |
    # Configure Git user
    git config --global user.name "SPN"
    git config --global user.email "admin@MngEnvMCAP843707.onmicrosoft.com"

    $pbixReports = Get-ChildItem -Path "$(Build.SourcesDirectory)" -Recurse -Filter *.pbix
    $buildDateTime = Get-Date -Format "yyyyMMddHHmmss"
    $attributeName = "DeployOnDevDate"
    $attribute = "$($attributeName)=$($buildDateTime)"
 
    # Create .gitattributes file if it doesn't exist
    if (-Not (Test-Path -Path ".gitattributes")) {
        New-Item -ItemType File -Path ".gitattributes"
    }
    $gitattributesPath = "$(Build.SourcesDirectory)\.gitattributes" # Getting content from attributes file
    $content = Get-Content $gitattributesPath
    Write-Host "Conteúdo do arquivo .gitattributes: $content"

    # To each file in the list of pbix files, set attribute
    foreach ($reportFile in $pbixReports) { # including the path
      Write-Host "##[debug] PBIX file full name: $($reportFile.FullName)" # Including path

      $reportName = [System.IO.Path]::GetFileNameWithoutExtension($reportFile)
      Write-Host "##[debug] PBIX file report name: $($reportName)"
      $reportNameWithoutSpaces = $reportName -replace "\s", ""
      Write-Host "##[debug] PBIX file report name without spaces: $($reportNameWithoutSpaces)"
    
      $attributeOutput = git check-attr $attributeName $reportNameWithoutSpaces
      $attributeOutput = $attributeOutput.Trim()
      Write-Host "##[debug] attributeOutput: $($attributeOutput)"

      $attributeOutput -match "$($attributeName):\s*(.*)"
      $attributeValue = $matches[1].Trim()
      Write-Host "##[debug] attributeValue: $($attributeValue)"

      if (-not $attributeOutput -or $attributeValue -eq "unspecified" -or $attributeValue -eq "unset") { # attribute is not set in the attribute file 
        # Adicionar atributo ao arquivo .gitattributes
        Write-Host "##[debug] Adding attribute to the file: $($attribute)" 
        Add-Content -Path "$(Build.SourcesDirectory)\.gitattributes" -Value "$($reportNameWithoutSpaces) $($attribute)"
        Write-Host "##[debug] Attribute added with success!"
      } else { # attribute is set in the attribute file, so we need to update it
        # Changing attribute in the file .gitattributes
        Write-Host "##[debug] Changing attribute in the file: $($attribute)"
        (Get-Content $gitattributesPath) -replace "$($reportNameWithoutSpaces) $($attributeName)=.*", "$($reportNameWithoutSpaces) $($attribute)" | Set-Content $gitattributesPath
        Write-Host "##[debug] Attribute added with success!"
      }
    }
    # Commit and push changes
    Write-Host "##[debug] Updating the file in the repository"
    git add .gitattributes
    git commit -m "Adding attribute to the file"
    git push origin HEAD:refs/heads/master
  displayName: 'Add Attribute to File'
  env:
    SYSTEM_ACCESSTOKEN: $(System.AccessToken)
